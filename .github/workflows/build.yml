name: Build Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Install dependencies
        run: brew install autoconf automake libtool

      - name: Configure and make
        run: |
          mkdir ${{ github.workspace }}/output
          ./autogen.sh
          ./configure --prefix=${{ github.workspace }}/output --disable-shared
          make -j4
          make install
          pushd ${{ github.workspace }}/output/include/google/protobuf
          zip -r ../../../../include.zip .
          popd

      - name: Rename and move build output
        run: |
          mv ${{ github.workspace }}/output/bin/protoc ${{ github.workspace }}/protoc-macos11
          mv ${{ github.workspace }}/output/lib/libprotobuf-lite.a ${{ github.workspace }}/libprotobuf-lite-macos11.a

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-macos11
          path: |
            ${{ github.workspace }}/protoc-macos11
            ${{ github.workspace }}/include.zip
            ${{ github.workspace }}/libprotobuf-lite-macos11.a
            ${{ github.workspace }}/LICENSE

  build-macos-arm64:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure and make
        run: |
          mkdir ${{ github.workspace }}/output
          ./autogen.sh
          ./configure --prefix=${{ github.workspace }}/output --disable-shared
          make -j4
          make install
          pushd ${{ github.workspace }}/output/include/google/protobuf
          zip -r ../../../../include.zip .
          popd

      - name: Rename and move build output
        run: |
          mv ${{ github.workspace }}/output/bin/protoc ${{ github.workspace }}/protoc-macos-arm64
          mv ${{ github.workspace }}/output/lib/libprotobuf-lite.a ${{ github.workspace }}/libprotobuf-lite-macos-arm64.a

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-macos-arm64
          path: |
            ${{ github.workspace }}/protoc-macos-arm64
            ${{ github.workspace }}/libprotobuf-lite-macos-arm64.a

  build-linux-x64:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Configure and make
        run: |
          mkdir ${{ github.workspace }}/output
          ./autogen.sh
          ./configure --prefix=${{ github.workspace }}/output --disable-shared
          make -j4
          make install
      - name: Rename and move build output
        run: |
          mv ${{ github.workspace }}/output/bin/protoc protoc-linux
          mv ${{ github.workspace }}/output/lib/libprotobuf-lite.a libprotobuf-lite-linux-x64.a

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-linux-x64
          path: |
            protoc-linux
            libprotobuf-lite-linux-x64.a

  build-android-and-rpi:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Get RPi toolchain
        run: |
          wget https://github.com/sfjohnson/rpi-toolchain/releases/download/v0.0.6/arm-rpi-linux-gnueabihf.tar.xz
          tar xf arm-rpi-linux-gnueabihf.tar.xz -C ~

      - name: Configure and make Android
        run: |
          ln -sf $ANDROID_NDK_ROOT $ANDROID_SDK_ROOT/ndk-bundle
          mkdir ${{ github.workspace }}/output
          ./autogen.sh
          ./configure --prefix=${{ github.workspace }}/output --with-sysroot=/usr/local/lib/android/sdk/ndk-bundle/sysroot --host=aarch64-linux-android --disable-shared --enable-cross-compile LDFLAGS="-L/usr/local/lib/android/sdk/ndk-bundle/sources/cxx-stl/llvm-libc++/libs/arm64-v8a" LIBS="-lc++_shared"
          make -j4
          make install
          mv ${{ github.workspace }}/output/lib/libprotobuf-lite.a libprotobuf-lite-android30.a
        env:
          AR: /usr/local/lib/android/sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ar
          RANLIB: /usr/local/lib/android/sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/llvm-ranlib
          LD: /usr/local/lib/android/sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/ld
          CC: /usr/local/lib/android/sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android30-clang
          CXX: /usr/local/lib/android/sdk/ndk-bundle/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android30-clang
          CXXSTL: /usr/local/lib/android/sdk/ndk-bundle/sources/cxx-stl/llvm-libc++

      - name: Configure and make RPi
        run: |
          make clean
          ./configure --prefix=${{ github.workspace }}/output --with-sysroot=/home/runner/arm-rpi-linux-gnueabihf/arm-rpi-linux-gnueabihf/sysroot --host=arm-rpi-linux-gnueabihf --disable-shared --enable-cross-compile
          make -j4
          make install
          mv ${{ github.workspace }}/output/lib/libprotobuf-lite.a libprotobuf-lite-rpi.a
        env:
          AR: /home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-ar
          RANLIB: /home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-ranlib
          LD: /home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-gcc
          CC: /home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-gcc
          CXX: /home/runner/arm-rpi-linux-gnueabihf/bin/arm-rpi-linux-gnueabihf-g++

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: build-output-android-and-rpi
          path: |
            libprotobuf-lite-android30.a
            libprotobuf-lite-rpi.a

  create-release:
    runs-on: ubuntu-22.04
    needs: [build-macos, build-macos-arm64, build-linux-x64, build-android-and-rpi]
    steps:
      - name: Get build output macos11
        uses: actions/download-artifact@v2
        with:
          name: build-output-macos11

      - name: Get build output macos-arm64
        uses: actions/download-artifact@v2
        with:
          name: build-output-macos-arm64

      - name: Get build output linux
        uses: actions/download-artifact@v2
        with:
          name: build-output-linux-x64

      - name: Get build output android30
        uses: actions/download-artifact@v2
        with:
          name: build-output-android-and-rpi

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            protoc-macos11
            protoc-macos-arm64
            protoc-linux
            include.zip
            libprotobuf-lite-macos11.a
            libprotobuf-lite-android30.a
            libprotobuf-lite-macos-arm64.a
            libprotobuf-lite-rpi.a
            libprotobuf-lite-linux-x64.a
            LICENSE
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
